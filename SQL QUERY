CREATE DATABASE OLA ;
use ola ;

RENAME TABLE `bookings-20000-rows updated` TO ola_booking;



SHOW TABLES ;


-- COMPARE CURRENT RIDE VALUE TO AVG OF THAT VEHICLE TYPE

SELECT VEHICLE_TYPE , BOOKING_VALUE ,
ROUND(AVG(BOOKING_VALUE) OVER(PARTITION BY VEHICLE_TYPE),2) AS AVG_BOOKING_VALUE ,
CASE
 WHEN BOOKING_VALUE >AVG(BOOKING_VALUE) OVER(PARTITION BY VEHICLE_TYPE) THEN 'ABOVE_AVG'
WHEN BOOKING_VALUE<AVG(BOOKING_VALUE) OVER(PARTITION BY VEHICLE_TYPE) THEN 'BELOW_AVG'
ELSE 'NO CHANGE'
END AS COMPARISON_OF_VALUES
FROM OLA_BOOKING
ORDER BY BOOKING_VALUE DESC ;


-- CALCULATE 7 DAY MOVING AVG OF BOOKINGS 

SELECT DATE ,
COUNT(*) AS DAILY_BOOKINGS ,
AVG(COUNT(*)) OVER(ORDER BY DATE ROWS BETWEEN 6 PRECEDING AND CURRENT ROW ) AS MOVING_AVG
FROM OLA_BOOKING
GROUP BY DATE
ORDER BY DATE ;


-- FIND EACH CUSTOMER'S RANK BASED ON TOTAL BOOKING VALUE 

SELECT CUSTOMER_ID , 
SUM(BOOKING_VALUE) AS TOTAL_VALUE ,
RANK() OVER (ORDER BY SUM(BOOKING_VALUE) DESC) AS CUSTOMER_RANK
FROM OLA_BOOKING 
GROUP BY CUSTOMER_ID ;


-- WHICH PICKUP LOCATION HAS THE HIGHEST NUMBER OF BOOKINGS ?

SELECT PICKUP_LOCATION , COUNT(*) AS TOTAL_BOOKINGS
FROM OLA_BOOKING
GROUP BY PICKUP_LOCATION
ORDER BY TOTAL_BOOKINGS  DESC
LIMIT 1;


-- RETRIEVE ALL SUCESSFUL BOOKINGS . 

SELECT * FROM OLA_BOOKING
WHERE BOOKING_STATUS ='SUCCESS' ;


-- FIND THE AVG RIDE DISTANCE FOR EACH VEHICLE TYPE .

SELECT VEHICLE_TYPE ,
ROUND(AVG(RIDE_DISTANCE) , 2) AS AVG_RIDE_DISTANCE 
FROM OLA_BOOKING
GROUP BY VEHICLE_TYPE ;


-- GET THE TOTAL NUMBER OF CANCELLED RIDES BY CUSTOMERS 

SELECT COUNT(*)
FROM OLA_BOOKING 
WHERE BOOKING_STATUS = 'CANCELED BY CUSTOMER' ;


-- LIST THE TOP 5 CUSTOMERS WHO BOOKED THE HIGHEST NO OF RIDES

SELECT CUSTOMER_ID , 
COUNT(BOOKING_ID) AS TOTAL_RIDES
FROM OLA_BOOKING
GROUP BY CUSTOMER_ID
ORDER BY TOTAL_RIDES DESC LIMIT 5 ;


--  GET THE NO OF RIDES CANCELLED BY DRIVERS DUE TO PERSONAL AND CAR -RELATED ISSUES 

SELECT COUNT(*) 
FROM OLA_BOOKING
WHERE CANCELED_RIDES_BY_DRIVER = 'PERSONAL & CAR RELATED ISSUE' ;


--  FIND THE MAX AND MIN DRIVER RATINGS FOR PRIME SEDAN BOOKING 

SELECT MAX(DRIVER_RATINGS)  AS MAX_DRIVER_RATING,
MIN(DRIVER_RATINGS) AS MIN_DRIVER_RATING
FROM OLA_BOOKING
WHERE VEHICLE_TYPE = 'PRIME SEDAN' ;


-- RETRIEVE ALL RIDES WHERE PAYMENT WAS MADE USING UPI 

 SELECT *  FROM OLA_BOOKING
 WHERE PAYMENT_METHOD= 'UPI';
 
 
 --  FIND AVG CUSTOMER RATING AS PER VEHICLE TYPE 
 
SELECT VEHICLE_TYPE ,
ROUND(AVG(CUSTOMER_RATING),2) AS AVG_CUSTOMER_RATING
FROM OLA_BOOKING
GROUP BY VEHICLE_TYPE ;


--  CALCULATE THE TOTAL BOOKING VALUE OF RIDES COMPLETETD SUCCESSFULLY 

SELECT 
ROUND(AVG(CUSTOMER_RATING),2) AS AVG_CUSTOMER_RATING ,
SUM(BOOKING_VALUE) AS TOTAL_BOOKING_VALUE
FROM OLA_BOOKING
WHERE BOOKING_STATUS ='SUCCESS' ;


 -- LIST ALL INCOMPLETE RIDES ALONG WITH THE REASON 
 
 SELECT BOOKING_ID ,
 INCOMPLETE_RIDES_REASON FROM OLA_BOOKING
 WHERE INCOMPLETE_RIDES ='YES'
 GROUP BY BOOKING_ID , INCOMPLETE_RIDES_REASON
  ;



